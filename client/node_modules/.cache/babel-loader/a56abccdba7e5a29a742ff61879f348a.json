{"ast":null,"code":"import { ADD_MESSAGE } from \"../actions\";\nimport { DELETE_MESSAGE } from \"../actions\";\nimport Messages, { state } from \"../components/Messages\";\n/* const initialMessages = {\n    messages: [\n            {name: 'Alvin', message: 'Hi', id: 1},\n            {name: 'Todd', message: 'Hello', id: 2},\n            {name: 'Kawhi', message: 'What it do ?', id: 3}\n            ]\n        } */\n\nconst initialMessages = Messages.messages; // reducer function takes two arguments: 1) state (set with above array) & 2) an action\n// reducer returns a new state based on the action, updating the given(old) state accordingly\n\nconst messageReducer = (state = initialMessages, action) => {\n  switch (action.type) {\n    case 'DELETE_MESSAGE':\n      console.log(action);\n      let newMessages = state.messages.filter(message => {\n        return action.id !== message.id;\n      });\n      return {\n        messages: newMessages\n      };\n\n    case 'ADD_MESSAGE':\n      console.log(action);\n      const newState = state.messages.slice(0);\n      newState.push(action.payload);\n      return {\n        messages: newState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/reducers/index.js"],"names":["ADD_MESSAGE","DELETE_MESSAGE","Messages","state","initialMessages","messages","messageReducer","action","type","console","log","newMessages","filter","message","id","newState","slice","push","payload"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,QAAP,IAAmBC,KAAnB,QAAgC,wBAAhC;AAEA;;;;;;;;AAQA,MAAMC,eAAe,GAAGF,QAAQ,CAACG,QAAjC,C,CACA;AACA;;AACA,MAAMC,cAAc,GAAG,CAACH,KAAK,GAAGC,eAAT,EAA0BG,MAA1B,KAAqC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,UAAII,WAAW,GAAGR,KAAK,CAACE,QAAN,CAAeO,MAAf,CAAsBC,OAAO,IAAI;AAC/C,eAAON,MAAM,CAACO,EAAP,KAAcD,OAAO,CAACC,EAA7B;AACH,OAFiB,CAAlB;AAGA,aAAO;AACHT,QAAAA,QAAQ,EAAEM;AADP,OAAP;;AAIJ,SAAK,aAAL;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,YAAMQ,QAAQ,GAAGZ,KAAK,CAACE,QAAN,CAAeW,KAAf,CAAqB,CAArB,CAAjB;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcV,MAAM,CAACW,OAArB;AACA,aAAO;AACHb,QAAAA,QAAQ,EAAEU;AADP,OAAP;;AAIJ;AACI,aAAOZ,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeG,cAAf","sourcesContent":["import { ADD_MESSAGE } from \"../actions\";\nimport { DELETE_MESSAGE } from \"../actions\";\nimport Messages, { state } from \"../components/Messages\";\n\n/* const initialMessages = {\n    messages: [\n            {name: 'Alvin', message: 'Hi', id: 1},\n            {name: 'Todd', message: 'Hello', id: 2},\n            {name: 'Kawhi', message: 'What it do ?', id: 3}\n            ]\n        } */\n\nconst initialMessages = Messages.messages;\n// reducer function takes two arguments: 1) state (set with above array) & 2) an action\n// reducer returns a new state based on the action, updating the given(old) state accordingly\nconst messageReducer = (state = initialMessages, action) => {\n    switch (action.type){\n        case 'DELETE_MESSAGE':\n            console.log(action);  \n            let newMessages = state.messages.filter(message => {\n                return action.id !== message.id\n            });\n            return {\n                messages: newMessages\n                };\n        \n        case 'ADD_MESSAGE':\n            console.log(action);\n            const newState = state.messages.slice(0);\n            newState.push(action.payload);\n            return {\n                messages: newState\n            };\n\n        default: \n            return state;\n    }\n}\n\nexport default messageReducer\n\n\n"]},"metadata":{},"sourceType":"module"}