{"ast":null,"code":"var _jsxFileName = \"/Users/mikepowar/a2React-Ninja-master/src/components/MessageBoardDisplay.js\";\nimport React, { Component } from 'react';\nimport Messages from './Messages';\nimport AddMessage from './AddMessage';\nimport { connect } from 'react-redux';\n\nclass MessageBoardDisplay extends Component {\n  //TEST: Express setup\n  constructor(props) {\n    super(props);\n    this.state = {\n      messagesExpress: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('./a2React-Ninja/routes/users').then(res => res.json()).then(users => this.setState({\n      messagesExpress\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Messages, {\n      messages: this.props.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(AddMessage, {\n      addMessage: this.addMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Express Stuff\", React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"ExpressMessages\"), this.state.messagesExpress.map(message => React.createElement(\"div\", {\n      key: messagesExpress.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, message.name))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteMessage: id => {\n      dispatch({\n        type: 'DELETE_MESSAGE',\n        id: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoardDisplay);","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/components/MessageBoardDisplay.js"],"names":["React","Component","Messages","AddMessage","connect","MessageBoardDisplay","constructor","props","state","messagesExpress","componentDidMount","fetch","then","res","json","users","setState","render","messages","addMessage","map","message","id","name","mapStateToProps","mapDispatchToProps","dispatch","deleteMessage","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAExC;AACAK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd,CAFf;AAGH;;AAGDQ,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAI,KAAKV,KAAL,CAAWW,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,KAAKC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEK,KAAKX,KAAL,CAAWC,eAAX,CAA2BW,GAA3B,CAA+BC,OAAO,IACvC;AAAK,MAAA,GAAG,EAAEZ,eAAe,CAACa,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BD,OAAO,CAACE,IAAvC,CADC,CAFL,CAHJ,CADJ;AAaH;;AA9BuC;;AAiC5C,MAAMC,eAAe,GAAIhB,KAAD,IAAW;AAC/B,SAAO;AACHU,IAAAA,QAAQ,EAAEV,KAAK,CAACU;AADb,GAAP;AAGH,CAJD;;AAMA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,aAAa,EAAGL,EAAD,IAAQ;AAAEI,MAAAA,QAAQ,CAAE;AAAEE,QAAAA,IAAI,EAAE,gBAAR;AAA0BN,QAAAA,EAAE,EAAEA;AAA9B,OAAF,CAAR;AAA+C;AADrE,GAAP;AAGH,CAJD;;AAOA,eAAelB,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpB,mBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Messages from './Messages';\nimport AddMessage from './AddMessage';\nimport { connect } from 'react-redux';\n\n\nclass MessageBoardDisplay extends Component {\n\n    //TEST: Express setup\n    constructor(props) {\n        super(props);\n        this.state = {messagesExpress: []};\n    }\n\n    componentDidMount(){\n        fetch('./a2React-Ninja/routes/users')\n        .then(res => res.json())\n        .then(users => this.setState({ messagesExpress }));\n    }\n\n\n    render(){\n        \n        return(\n            <div>\n                <Messages messages = {this.props.messages}/>\n                <AddMessage addMessage={this.addMessage}/>\n                <div>Express Stuff\n                    <h1>ExpressMessages</h1>\n                    {this.state.messagesExpress.map(message => \n                    <div key={messagesExpress.id}>{message.name}</div>\n                    )}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.messages\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteMessage: (id) => { dispatch ({ type: 'DELETE_MESSAGE', id: id }) }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoardDisplay);"]},"metadata":{},"sourceType":"module"}