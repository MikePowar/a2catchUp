{"ast":null,"code":"var _jsxFileName = \"/Users/mikepowar/a2React-Ninja-master/src/components/Messages.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; //RETURNS messageList - as Message *** SHOULD MESSAGE name be changed ?\n// the returned list is what gets rendered as a component which contains messages & delete message within it.\n\nclass Messages extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messagesExpress: []\n    };\n  }\n\n  //A3: Component Lifecycle method to receive messages info to render    \n  componentDidMount() {\n    fetch('/users').then(res => res.json()).then(messagesExpress => this.setState({\n      messagesExpress\n    }));\n    console.log(this.state);\n    console.log(this.props);\n  }\n\n  render() {\n    //const { messages } = this.props;\n    //A3: changed above to below\n    const messages = this.state.messagesExpress; //const messageList = messages.length ? (\n    ////A3: changed above to below\n\n    const messageList = messages.length ? messages.map(message => {\n      return React.createElement(\"div\", {\n        className: \"message\",\n        key: message.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/messages/' + message.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Name:\", message.name, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Message:\", message.message, \" \")), React.createElement(\"button\", {\n        onClick: () => {\n          this.props.deleteMessage(message.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Delete Message\"));\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"No messages\");\n    return React.createElement(\"div\", {\n      className: \"messageList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, messageList);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteMessage: id => {\n      dispatch({\n        type: 'DELETE_MESSAGE',\n        id: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/components/Messages.js"],"names":["React","Component","connect","Link","Messages","state","messagesExpress","componentDidMount","fetch","then","res","json","setState","console","log","props","render","messages","messageList","length","map","message","id","name","deleteMessage","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BI,KAF6B,GAErB;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAFqB;AAAA;;AAI7B;AACAC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,QAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMH,eAAe,IAAI,KAAKM,QAAL,CAAc;AAAEN,MAAAA;AAAF,KAAd,CAFzB;AAGAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH;;AAIDC,EAAAA,MAAM,GAAG;AACL;AACA;AACA,UAAMC,QAAQ,GAAI,KAAKZ,KAAL,CAAWC,eAA7B,CAHK,CAKL;AACA;;AACA,UAAMY,WAAW,GAAGD,QAAQ,CAACE,MAAT,GACpBF,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAAI;AAChB,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAGA,OAAO,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,eAAeD,OAAO,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYD,OAAO,CAACE,IAApB,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAeF,OAAO,CAACA,OAAvB,MAFA,CADJ,EAKI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKN,KAAL,CAAWS,aAAX,CAAyBH,OAAO,CAACC,EAAjC;AAAqC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,CADJ;AAWC,KAZT,CADoB,GAcN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdd;AAeA,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMJ,WADN,CADJ;AAKC;;AA1CwB;;AA8C7B,MAAMO,eAAe,GAAIpB,KAAD,IAAW;AAEnC,SAAO;AACHY,IAAAA,QAAQ,EAAEZ,KAAK,CAACY;AADb,GAAP;AAEG,CAJH;;AAMA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHH,IAAAA,aAAa,EAAGF,EAAD,IAAQ;AAAEK,MAAAA,QAAQ,CAAE;AAAEC,QAAAA,IAAI,EAAE,gBAAR;AAA0BN,QAAAA,EAAE,EAAEA;AAA9B,OAAF,CAAR;AAA+C;AADrE,GAAP;AAGH,CAJD;;AAMJ,eAAepB,OAAO,CAACuB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CtB,QAA5C,CAAf","sourcesContent":["import React, { Component }from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n//RETURNS messageList - as Message *** SHOULD MESSAGE name be changed ?\n// the returned list is what gets rendered as a component which contains messages & delete message within it.\n\nclass Messages extends Component {\n    //A3: added state here that will get the messages data from Express\n    state = {messagesExpress: []};\n\n    //A3: Component Lifecycle method to receive messages info to render    \n    componentDidMount(){\n        fetch('/users')\n        .then(res => res.json())\n        .then(messagesExpress => this.setState({ messagesExpress }));\n        console.log(this.state);\n        console.log(this.props);\n    }\n\n    \n\n    render() {\n        //const { messages } = this.props;\n        //A3: changed above to below\n        const messages  = this.state.messagesExpress;\n    \n        //const messageList = messages.length ? (\n        ////A3: changed above to below\n        const messageList = messages.length ? (\n        messages.map(message => {\n                return (\n                    <div className=\"message\" key={ message.id }>\n                        <Link to={'/messages/' + message.id }>\n                        <div>Name:{ message.name } </div>\n                        <div>Message:{ message.message } </div>\n                        </Link>\n                        <button onClick={() => {this.props.deleteMessage(message.id)}}>\n                            Delete Message\n                        </button>\n                    </div>\n                )\n                })\n                ) : ( <div>No messages</div> )\n        return (\n            <div className=\"messageList\">\n                { messageList }\n            </div>\n        )\n        }\n        }\n        \n\n    const mapStateToProps = (state) => {\n\n    return {\n        messages: state.messages\n    } }\n\n    const mapDispatchToProps = (dispatch) => {\n        return {\n            deleteMessage: (id) => { dispatch ({ type: 'DELETE_MESSAGE', id: id }) }\n        }\n    }\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Messages)"]},"metadata":{},"sourceType":"module"}