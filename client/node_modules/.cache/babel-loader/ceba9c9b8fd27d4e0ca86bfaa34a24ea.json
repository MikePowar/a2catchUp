{"ast":null,"code":"import axios from 'axios';\nexport const createMessages = message => {\n  return (dispatch, getState) => {\n    //make async call to database\n    dispatch({\n      type: 'CREATE_MESSAGES',\n      message: message\n    });\n  };\n};\nexport const FETCH_MESSAGES_BEGIN = 'FETCH_MESSAGES_BEGIN';\nexport const FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS';\nexport const FETCH_MESSAGES_FAILURE = 'FETCH_MESSAGES_FAILURE';\nexport const fetchMessagesBegin = () => ({\n  type: FETCH_MESSAGES_BEGIN\n});\nexport const fetchMessagesSuccess = messages => ({\n  type: FETCH_MESSAGES_SUCCESS,\n  payload: {\n    messages\n  }\n});\nexport const fetchMessagesFailure = error => ({\n  type: FETCH_MESSAGES_FAILURE,\n  payload: {\n    error\n  }\n});\nexport function fetchMessages() {\n  return dispatch => {\n    dispatch(fetchMessagesBegin());\n    return fetch('/messages').then(handleErrors).then(res => res.json()).then(json => {\n      dispatch(fetchMessagesSuccess(messages));\n      console.log(messages);\n      return json.messages;\n    }).catch(error => dispatch(fetchMessagesFailure(error)));\n  };\n} // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/actions/backendActions.js"],"names":["axios","createMessages","message","dispatch","getState","type","FETCH_MESSAGES_BEGIN","FETCH_MESSAGES_SUCCESS","FETCH_MESSAGES_FAILURE","fetchMessagesBegin","fetchMessagesSuccess","messages","payload","fetchMessagesFailure","error","fetchMessages","fetch","then","handleErrors","res","json","console","log","catch","response","ok","Error","statusText"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;AACvC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B;AAGAD,IAAAA,QAAQ,CAAE;AAAEE,MAAAA,IAAI,EAAE,iBAAR;AAA2BH,MAAAA,OAAO,EAAEA;AAApC,KAAF,CAAR;AACH,GALD;AAMH,CAPM;AASP,OAAO,MAAMI,oBAAoB,GAAK,sBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AACrCJ,EAAAA,IAAI,EAAEC;AAD+B,CAAP,CAA3B;AAIP,OAAO,MAAMI,oBAAoB,GAAGC,QAAQ,KAAK;AAC7CN,EAAAA,IAAI,EAAEE,sBADuC;AAE7CK,EAAAA,OAAO,EAAE;AAAED,IAAAA;AAAF;AAFoC,CAAL,CAArC;AAKP,OAAO,MAAME,oBAAoB,GAAGC,KAAK,KAAK;AAC1CT,EAAAA,IAAI,EAAEG,sBADoC;AAE1CI,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF;AAFiC,CAAL,CAAlC;AAKP,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOZ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACM,kBAAkB,EAAnB,CAAR;AACA,WAAOO,KAAK,CAAC,WAAD,CAAL,CACFC,IADE,CACGC,YADH,EAEFD,IAFE,CAEGE,GAAG,IACLA,GAAG,CAACC,IAAJ,EAHD,EAIFH,IAJE,CAIGG,IAAI,IAAI;AACVjB,MAAAA,QAAQ,CAACO,oBAAoB,CAACC,QAAD,CAArB,CAAR;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACA,aAAOS,IAAI,CAACT,QAAZ;AACH,KARE,EASFY,KATE,CASIT,KAAK,IAAIX,QAAQ,CAACU,oBAAoB,CAACC,KAAD,CAArB,CATrB,CAAP;AAUH,GAZD;AAaH,C,CAEC;;AACF,SAASI,YAAT,CAAsBM,QAAtB,EAAgC;AAC5B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,SAAOH,QAAP;AACH","sourcesContent":["import axios from 'axios';\n\nexport const createMessages = (message) => {\n    return (dispatch, getState) => {\n        //make async call to database\n\n        \n        dispatch ({ type: 'CREATE_MESSAGES', message: message });\n    }\n};\n\nexport const FETCH_MESSAGES_BEGIN   = 'FETCH_MESSAGES_BEGIN';\nexport const FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS';\nexport const FETCH_MESSAGES_FAILURE = 'FETCH_MESSAGES_FAILURE';\n\nexport const fetchMessagesBegin = () => ({\n    type: FETCH_MESSAGES_BEGIN\n});\n\nexport const fetchMessagesSuccess = messages => ({\n    type: FETCH_MESSAGES_SUCCESS,\n    payload: { messages }\n});\n\nexport const fetchMessagesFailure = error => ({\n    type: FETCH_MESSAGES_FAILURE,\n    payload: { error }\n});\n\nexport function fetchMessages() {\n    return dispatch => {\n        dispatch(fetchMessagesBegin());\n        return fetch('/messages')\n            .then(handleErrors)\n            .then(res => \n                res.json())\n            .then(json => {\n                dispatch(fetchMessagesSuccess(messages));\n                console.log(messages);\n                return json.messages;\n            })\n            .catch(error => dispatch(fetchMessagesFailure(error)));\n    };\n}\n\n  // Handle HTTP errors since fetch won't.\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n}"]},"metadata":{},"sourceType":"module"}