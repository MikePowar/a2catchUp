{"ast":null,"code":"export const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE';\nexport const INITIAL_MESSAGES = 'INITIAL_MESSAGES'; // not used in setup as is because actions are called in components and then adjusted\n// in reducer.\n\nexport function addMessage(message) {\n  return {\n    type: ADD_MESSAGE,\n    payload: message\n  };\n}\nexport function initialMessages(messages) {\n  //using thunk to return a function\n  return (dispatch, getState) => {\n    // make async call to database\n    dispatch({\n      type: 'INITIAL_MESSAGES',\n      messages\n    });\n  }; //{ type: INITIAL_MESSAGES, payload: messages }\n}\n; //pass index or message\n\nexport function deleteMessage(message) {\n  return {\n    type: DELETE_MESSAGE,\n    payload: message\n  };\n}","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/actions/index.jsx"],"names":["ADD_MESSAGE","DELETE_MESSAGE","INITIAL_MESSAGES","addMessage","message","type","payload","initialMessages","messages","dispatch","getState","deleteMessage"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB,C,CAEP;AACA;;AAEA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA4B;AAC/B,SAAO;AAAEC,IAAAA,IAAI,EAAEL,WAAR;AAAqBM,IAAAA,OAAO,EAAEF;AAA9B,GAAP;AACH;AAED,OAAO,SAASG,eAAT,CAAyBC,QAAzB,EAAkC;AACrC;AACA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B;AACAD,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,kBAAR;AAA4BG,MAAAA;AAA5B,KAAD,CAAR;AACH,GAHD,CAFqC,CAMrC;AACH;AAAA,C,CAED;;AACA,OAAO,SAASG,aAAT,CAAuBP,OAAvB,EAA+B;AAClC,SAAO;AAAEC,IAAAA,IAAI,EAAEJ,cAAR;AAAwBK,IAAAA,OAAO,EAAEF;AAAjC,GAAP;AACH","sourcesContent":["export const ADD_MESSAGE = 'ADD_MESSAGE'\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE'\nexport const INITIAL_MESSAGES = 'INITIAL_MESSAGES'\n\n// not used in setup as is because actions are called in components and then adjusted\n// in reducer.\n\nexport function addMessage(message){\n    return { type: ADD_MESSAGE, payload: message }\n}\n\nexport function initialMessages(messages){\n    //using thunk to return a function\n    return (dispatch, getState) => {\n        // make async call to database\n        dispatch({ type: 'INITIAL_MESSAGES', messages });\n    }\n    //{ type: INITIAL_MESSAGES, payload: messages }\n};\n\n//pass index or message\nexport function deleteMessage(message){\n    return { type: DELETE_MESSAGE, payload: message }\n}\n"]},"metadata":{},"sourceType":"module"}