{"ast":null,"code":"var _jsxFileName = \"/Users/mikepowar/a2React-Ninja-master/src/components/MessageBoardDisplay.js\";\nimport React, { Component } from 'react';\nimport Messages from './Messages';\nimport AddMessage from './AddMessage';\nimport { connect } from 'react-redux';\nimport { createMessages, fetchMessages } from '../actions/backendActions';\n\nclass MessageBoardDisplay extends Component {\n  /*     state = {\n          name: '',\n          message: '',\n          id: 2\n      }\n  \n      generateInitialMsg = () => {\n          return this.props.createMessages(this.state)\n      }; */\n  componentDidMount() {\n    this.props.dispatch(fetchMessages());\n  }\n\n  render() {\n    //console.log(this.props);\n    //destructure to get messages object off props\n    //const { messages } = this.props;\n    //this.generateInitialMsg();\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          messages = _this$props.messages;\n    console.log(this.props);\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Error! \", error.message);\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Messages, {\n      messages: messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(AddMessage, {\n      addMessage: this.addMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    //messages: state.message.messages\n    messages: state.messages,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createMessages: message => dispatch(createMessages(message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoardDisplay);","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/components/MessageBoardDisplay.js"],"names":["React","Component","Messages","AddMessage","connect","createMessages","fetchMessages","MessageBoardDisplay","componentDidMount","props","dispatch","render","error","loading","messages","console","log","message","addMessage","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,2BAA9C;;AAGA,MAAMC,mBAAN,SAAkCN,SAAlC,CAA4C;AAC5C;;;;;;;;;AAUIO,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,QAAX,CAAoBJ,aAAa,EAAjC;AACH;;AAEDK,EAAAA,MAAM,GAAE;AACJ;AACA;AACA;AACA;AAJI,wBAMiC,KAAKF,KANtC;AAAA,UAMIG,KANJ,eAMIA,KANJ;AAAA,UAMWC,OANX,eAMWA,OANX;AAAA,UAMoBC,QANpB,eAMoBA,QANpB;AAOJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;;AACA,QAAIG,KAAJ,EAAW;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACK,OAAnB,CAAP;AACH;;AACD,QAAIJ,OAAJ,EAAa;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAKC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,KAAKI,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AApCuC;;AAuC5C,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACH;AACAN,IAAAA,QAAQ,EAAEM,KAAK,CAACN,QAFb;AAGHD,IAAAA,OAAO,EAAEO,KAAK,CAACP,OAHZ;AAIHD,IAAAA,KAAK,EAAEQ,KAAK,CAACR;AAJV,GAAP;AAMH,CAPD;;AASA,MAAMS,kBAAkB,GAAIX,QAAD,IAAc;AACrC,SAAO;AACHL,IAAAA,cAAc,EAAGY,OAAD,IAAaP,QAAQ,CAACL,cAAc,CAACY,OAAD,CAAf;AADlC,GAAP;AAGH,CAJD;;AAOA,eAAeb,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,mBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Messages from './Messages';\nimport AddMessage from './AddMessage';\nimport { connect } from 'react-redux';\nimport { createMessages, fetchMessages } from '../actions/backendActions';\n\n\nclass MessageBoardDisplay extends Component {\n/*     state = {\n        name: '',\n        message: '',\n        id: 2\n    }\n\n    generateInitialMsg = () => {\n        return this.props.createMessages(this.state)\n    }; */\n\n    componentDidMount(){\n        this.props.dispatch(fetchMessages());\n    }\n\n    render(){\n        //console.log(this.props);\n        //destructure to get messages object off props\n        //const { messages } = this.props;\n        //this.generateInitialMsg();\n\n        const { error, loading, messages } = this.props;\n        console.log(this.props);\n        if (error) {\n            return <div>Error! {error.message}</div>;\n        }\n        if (loading) {\n            return <div>Loading...</div>;\n        }\n        return(\n            <div>\n                {/* pass { messages down into messages component } */}\n                <Messages messages = { messages }/>\n                <AddMessage addMessage={this.addMessage}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        //messages: state.message.messages\n        messages: state.messages,\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createMessages: (message) => dispatch(createMessages(message))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoardDisplay);"]},"metadata":{},"sourceType":"module"}