{"ast":null,"code":"var _jsxFileName = \"/Users/mikepowar/a2React-Ninja-master/src/components/ClickedMessage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Messages from './Messages';\nimport MesageBoardDisplay from './MessageBoardDisplay';\n\nclass ClickedMessage extends Component {\n  render() {\n    let id = this.props.match.params.message_id;\n    const parseId = parseInt(id);\n    console.log(parseId);\n    const result = this.props.messages.find(message => message.id === parseId);\n    console.log(result);\n    const messageToDisplay = this.props.messages.map(message => {\n      this.props.messages.find(message => message.id === parseId);\n      return React.createElement(\"div\", {\n        className: \"message\",\n        key: message.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Name:\", message.Name, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Message:\", message.Message, \" \"));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"yo yo yo\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, id), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, messageToDisplay));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    messages: state.messages\n  };\n};\n\nexport default connect(mapStateToProps)(ClickedMessage);","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/components/ClickedMessage.js"],"names":["React","Component","connect","Messages","MesageBoardDisplay","ClickedMessage","render","id","props","match","params","message_id","parseId","parseInt","console","log","result","messages","find","message","messageToDisplay","map","Name","Message","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACnCK,EAAAA,MAAM,GAAE;AACJ,QAAIC,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,UAAjC;AACA,UAAMC,OAAO,GAAGC,QAAQ,CAACN,EAAD,CAAxB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,UAAMI,MAAM,GAAG,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,IAApB,CAAyBC,OAAO,IAAKA,OAAO,CAACZ,EAAR,KAAeK,OAApD,CAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,UAAMI,gBAAgB,GAAG,KAAKZ,KAAL,CAAWS,QAAX,CAAoBI,GAApB,CAAwBF,OAAO,IAAI;AACxD,WAAKX,KAAL,CAAWS,QAAX,CAAoBC,IAApB,CAAyBC,OAAO,IAAKA,OAAO,CAACZ,EAAR,KAAeK,OAApD;AACA,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAGO,OAAO,CAACZ,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYY,OAAO,CAACG,IAApB,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAeH,OAAO,CAACI,OAAvB,MAFJ,CADJ;AAMH,KARwB,CAAzB;AASA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhB,EAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKa,gBAAL,CAHJ,CADA;AAOH;;AAvBkC;;AA0BvC,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/BX,EAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAK,CAACR;AADb,GAAP;AAGH,CALD;;AAQA,eAAef,OAAO,CAACsB,eAAD,CAAP,CAAyBnB,cAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Messages from './Messages';\nimport MesageBoardDisplay from './MessageBoardDisplay';\n\nclass ClickedMessage extends Component {\n    render(){\n        let id = this.props.match.params.message_id;\n        const parseId = parseInt(id);\n        console.log(parseId)\n        const result = this.props.messages.find(message => (message.id === parseId));\n        console.log(result)\n        const messageToDisplay = this.props.messages.map(message => { \n            this.props.messages.find(message => (message.id === parseId));\n            return (\n                <div className=\"message\" key={ message.id }>\n                    <div>Name:{ message.Name } </div>\n                    <div>Message:{ message.Message } </div>\n                </div>\n                    )\n        })\n        return(\n        <div>\n            <h4>yo yo yo</h4>\n            <h4>{id}</h4>\n            <h3>{messageToDisplay}</h3>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        messages: state.messages\n    }\n}\n\n\nexport default connect(mapStateToProps)(ClickedMessage);"]},"metadata":{},"sourceType":"module"}