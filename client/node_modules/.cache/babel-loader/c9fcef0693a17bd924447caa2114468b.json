{"ast":null,"code":"var _jsxFileName = \"/Users/mikepowar/a2React-Ninja-master/src/components/Messages.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from '../../../Library/Caches/typescript/3.5/node_modules/redux';\nimport { initialMessages } from '../actions/index'; //RETURNS messageList - as Message *** SHOULD MESSAGE name be changed ?\n// the returned list is what gets rendered as a component which contains messages & delete message within it.\n\nclass Messages extends Component {\n  componentDidMount() {\n    this.props.initialMessages();\n  } //A3: change below to above\n  //const messages  = this.state.messagesExpress;\n  //A3: added state here that will get the messages data from Express\n  //state = {messagesExpress: []};\n  //A3: Component Lifecycle method to receive messages info to render    \n  //componentDidMount(){\n  //  actions.dispatch ({ type: 'INITIAL_MESSAGES', messages: messages });\n  // fetch('/users')\n  // .then(res => res.json())\n  // .then(messagesExpress => this.setState({ messagesExpress }));\n  //}\n\n\n  render() {\n    const messages = this.props.initialMessages.messages;\n    console.log(messages); //const messageList = messages.length ? (\n    ////A3: change below to above\n\n    const messageList = messages.length ? messages.map(message => {\n      return React.createElement(\"div\", {\n        className: \"message\",\n        key: message.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/messages/' + message.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Name:\", message.name, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Message:\", message.message, \" \")), React.createElement(\"button\", {\n        onClick: () => {\n          this.props.deleteMessage(message.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Delete Message\"));\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"No messages\");\n    return React.createElement(\"div\", {\n      className: \"messageList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, messageList);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n}; //Dispatch the deleteMessage action and give it the message.id as payload\n//mapped function to props\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteMessage: id => {\n      dispatch({\n        type: 'DELETE_MESSAGE',\n        id: id\n      });\n    },\n    initialMessages: messages => ({\n      type: 'INITIAL_MESSAGES',\n      messsages: messages\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/components/Messages.js"],"names":["React","Component","connect","Link","bindActionCreators","initialMessages","Messages","componentDidMount","props","render","messages","console","log","messageList","length","map","message","id","name","deleteMessage","mapStateToProps","state","mapDispatchToProps","dispatch","type","messsages"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,kBAAT,QAAmC,2DAAnC;AACA,SAASC,eAAT,QAAgC,kBAAhC,C,CAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC7BM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWH,eAAX;AACH,GAH4B,CAI7B;AACA;AAEA;AACA;AAEA;AACA;AACI;AACA;AACA;AACA;AACJ;;;AAIAI,EAAAA,MAAM,GAAG;AAAA,UACGC,QADH,GACgB,KAAKF,KAAL,CAAWH,eAD3B,CACGK,QADH;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFK,CAGL;AACA;;AACA,UAAMG,WAAW,GAAGH,QAAQ,CAACI,MAAT,GACpBJ,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAAI;AAChB,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAGA,OAAO,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,eAAeD,OAAO,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYD,OAAO,CAACE,IAApB,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAeF,OAAO,CAACA,OAAvB,MAFA,CADJ,EAKI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKR,KAAL,CAAWW,aAAX,CAAyBH,OAAO,CAACC,EAAjC;AAAqC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,CADJ;AAWC,KAZT,CADoB,GAcN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdd;AAeA,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMJ,WADN,CADJ;AAKC;;AA7CwB;;AAiD7B,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACnC,SAAO;AACHX,IAAAA,QAAQ,EAAEW,KAAK,CAACX;AADb,GAAP;AAEG,CAHH,C,CAKA;AACA;;;AACA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHJ,IAAAA,aAAa,EAAGF,EAAD,IAAQ;AAAEM,MAAAA,QAAQ,CAAE;AAAEC,QAAAA,IAAI,EAAE,gBAAR;AAA0BP,QAAAA,EAAE,EAAEA;AAA9B,OAAF,CAAR;AAA+C,KADrE;AAEHZ,IAAAA,eAAe,EAAGK,QAAD,KAAe;AAAEc,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,SAAS,EAAEf;AAAvC,KAAf;AAFd,GAAP;AAIH,CALD;;AAOJ,eAAeR,OAAO,CAACkB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4ChB,QAA5C,CAAf","sourcesContent":["import React, { Component }from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from '../../../Library/Caches/typescript/3.5/node_modules/redux';\nimport { initialMessages } from '../actions/index'\n\n//RETURNS messageList - as Message *** SHOULD MESSAGE name be changed ?\n// the returned list is what gets rendered as a component which contains messages & delete message within it.\n\nclass Messages extends Component {\n    componentDidMount(){\n        this.props.initialMessages();\n    }\n    //A3: change below to above\n    //const messages  = this.state.messagesExpress;\n    \n    //A3: added state here that will get the messages data from Express\n    //state = {messagesExpress: []};\n\n    //A3: Component Lifecycle method to receive messages info to render    \n    //componentDidMount(){\n        //  actions.dispatch ({ type: 'INITIAL_MESSAGES', messages: messages });\n        // fetch('/users')\n        // .then(res => res.json())\n        // .then(messagesExpress => this.setState({ messagesExpress }));\n    //}\n\n    \n\n    render() {\n        const { messages } = this.props.initialMessages;\n        console.log(messages);\n        //const messageList = messages.length ? (\n        ////A3: change below to above\n        const messageList = messages.length ? (\n        messages.map(message => {\n                return (\n                    <div className=\"message\" key={ message.id }>\n                        <Link to={'/messages/' + message.id }>\n                        <div>Name:{ message.name } </div>\n                        <div>Message:{ message.message } </div>\n                        </Link>\n                        <button onClick={() => {this.props.deleteMessage(message.id)}}>\n                            Delete Message\n                        </button>\n                    </div>\n                )\n                })\n                ) : ( <div>No messages</div> )\n        return (\n            <div className=\"messageList\">\n                { messageList }\n            </div>\n        )\n        }\n        }\n        \n\n    const mapStateToProps = (state) => {\n    return {\n        messages: state.messages\n    } }\n\n    //Dispatch the deleteMessage action and give it the message.id as payload\n    //mapped function to props\n    const mapDispatchToProps = (dispatch) => {\n        return {\n            deleteMessage: (id) => { dispatch ({ type: 'DELETE_MESSAGE', id: id }) },\n            initialMessages: (messages) => ({ type: 'INITIAL_MESSAGES', messsages: messages})\n        }\n    }\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Messages)"]},"metadata":{},"sourceType":"module"}