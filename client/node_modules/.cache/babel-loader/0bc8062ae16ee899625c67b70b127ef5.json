{"ast":null,"code":"var _jsxFileName = \"/Users/mikepowar/a2React-Ninja-master/src/components/MessageBoardDisplay.js\";\nimport React, { Component } from 'react';\nimport Messages from './Messages';\nimport AddMessage from './AddMessage';\nimport { connect } from 'react-redux';\n\nclass MessageBoardDisplay extends Component {\n  // state = {messagesExpress: []}\n  // componentDidMount(){\n  //     fetch('/users')\n  //     .then(res => res.json())\n  //     .then(messagesExpress => this.setState({ messagesExpress }));\n  //     console.log(this.state);\n  // }\n  componentDidMount() {\n    this.props.initialMessages();\n    console.log(this.props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Messages, {\n      messages: this.props.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(AddMessage, {\n      addMessage: this.addMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"ExpressMessages\"), React.createElement(\"ul\", {\n      className: \"messageList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.messagesExpress.map(message => React.createElement(\"div\", {\n      className: \"message\",\n      key: message.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Name: \", message.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Message: \", message.message))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initialMessages: messages => ({\n      type: 'INITIAL_MESSAGES',\n      messsages: messages\n    }),\n    deleteMessage: id => {\n      dispatch({\n        type: 'DELETE_MESSAGE',\n        id: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoardDisplay);","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/components/MessageBoardDisplay.js"],"names":["React","Component","Messages","AddMessage","connect","MessageBoardDisplay","componentDidMount","props","initialMessages","console","log","render","messages","addMessage","state","messagesExpress","map","message","id","name","mapStateToProps","mapDispatchToProps","dispatch","type","messsages","deleteMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AAEAK,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,eAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACH;;AAEDI,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAI,KAAKJ,KAAL,CAAWK,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,KAAKC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADR,EAEQ;AAAI,MAAA,SAAS,EAAG,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,GAA3B,CAA+BC,OAAO,IACvC;AAAK,MAAA,SAAS,EAAG,SAAjB;AAA2B,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYD,OAAO,CAACE,IAApB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeF,OAAO,CAACA,OAAvB,CAFJ,CADC,CADL,CAFR,CAHA,CADJ;AAiBH;;AAjCuC;;AAoC5C,MAAMG,eAAe,GAAIN,KAAD,IAAW;AAC/B,SAAO;AACHF,IAAAA,QAAQ,EAAEE,KAAK,CAACF;AADb,GAAP;AAGH,CAJD;;AAMA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHd,IAAAA,eAAe,EAAGI,QAAD,KAAe;AAAEW,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,SAAS,EAAEZ;AAAvC,KAAf,CADd;AAEHa,IAAAA,aAAa,EAAGP,EAAD,IAAQ;AAAEI,MAAAA,QAAQ,CAAE;AAAEC,QAAAA,IAAI,EAAE,gBAAR;AAA0BL,QAAAA,EAAE,EAAEA;AAA9B,OAAF,CAAR;AAA+C;AAFrE,GAAP;AAIH,CALD;;AAQA,eAAed,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ChB,mBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Messages from './Messages';\nimport AddMessage from './AddMessage';\nimport { connect } from 'react-redux';\n\n\nclass MessageBoardDisplay extends Component {\n    // state = {messagesExpress: []}\n    // componentDidMount(){\n    //     fetch('/users')\n    //     .then(res => res.json())\n    //     .then(messagesExpress => this.setState({ messagesExpress }));\n    //     console.log(this.state);\n    // }\n\n    componentDidMount(){\n        this.props.initialMessages();\n        console.log(this.props);\n    }\n\n    render(){\n        \n        return(\n            <div>\n                <Messages messages = {this.props.messages}/>\n                <AddMessage addMessage={this.addMessage}/>\n            <div>\n                    <h1>ExpressMessages</h1>\n                    <ul className = \"messageList\">\n                        {this.state.messagesExpress.map(message => \n                        <div className = \"message\" key={message.id}>\n                            <div>Name: {message.name}</div> \n                            <div>Message: {message.message}</div> \n                        </div>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.messages\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        initialMessages: (messages) => ({ type: 'INITIAL_MESSAGES', messsages: messages}),\n        deleteMessage: (id) => { dispatch ({ type: 'DELETE_MESSAGE', id: id }) }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoardDisplay);"]},"metadata":{},"sourceType":"module"}