{"ast":null,"code":"var _jsxFileName = \"/Users/mikepowar/a2React-Ninja-master/src/components/Messages.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { initialMessages } from '../actions/index'; //RETURNS messageList - as Message *** SHOULD MESSAGE name be changed ?\n// the returned list is what gets rendered as a component which contains messages & delete message within it.\n\nclass Messages extends Component {\n  render() {\n    console.log(this.props);\n    /* const messages = this.props.messages;\n    const messageList = messages.length ? (\n    messages.map(message => {\n            return (\n                <div className=\"message\" key={ message.id }>\n                    <Link to={'/messages/' + message.id }>\n                    <div>Name:{ message.name } </div>\n                    <div>Message:{ message.message } </div>\n                    </Link>\n                    <button onClick={() => {this.props.deleteMessage(message.id)}}>\n                        Delete Message\n                    </button>\n                </div>\n            )\n            })\n            ) : ( <div>No messages</div> ) */\n\n    const messagesList = ({\n      messages\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, messages && messages.map(message => {\n        return React.createElement(\"div\", {\n          className: \"message\",\n          key: message.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: '/messages/' + message.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Name:\", message.name, \" \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Message:\", message.message, \" \")), React.createElement(\"button\", {\n          onClick: () => {\n            this.props.deleteMessage(message.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Delete Message\"));\n      }));\n    };\n\n    return React.createElement(\"div\", {\n      className: \"messageList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, messageList);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.message.messages\n  };\n}; //Dispatch the deleteMessage action and give it the message.id as payload\n//mapped function to props\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteMessage: id => {\n      dispatch({\n        type: 'DELETE_MESSAGE',\n        id: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);","map":{"version":3,"sources":["/Users/mikepowar/a2React-Ninja-master/src/components/Messages.js"],"names":["React","Component","connect","Link","initialMessages","Messages","render","console","log","props","messagesList","messages","map","message","id","name","deleteMessage","messageList","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,kBAAhC,C,CAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAI7BK,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA;;;;;;;;;;;;;;;;;AAiBA,UAAMC,YAAY,GAAG,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAgB;AACjC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMA,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;AAClC,eACI;AAAK,UAAA,SAAS,EAAG,SAAjB;AAA2B,UAAA,GAAG,EAAGA,OAAO,CAACC,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,eAAeD,OAAO,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYD,OAAO,CAACE,IAApB,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAeF,OAAO,CAACA,OAAvB,MAFJ,CADJ,EAKI;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAC,iBAAKJ,KAAL,CAAWO,aAAX,CAAyBH,OAAO,CAACC,EAAjC;AAAqC,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,CADJ;AAWH,OAZa,CADlB,CADJ;AAiBH,KAlBD;;AAqBA,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMG,WADN,CADJ;AAKC;;AAjDwB;;AAqD7B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACnC,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAK,CAACN,OAAN,CAAcF;AADrB,GAAP;AAEG,CAHH,C,CAKA;AACA;;;AACA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHL,IAAAA,aAAa,EAAGF,EAAD,IAAQ;AAAEO,MAAAA,QAAQ,CAAE;AAAEC,QAAAA,IAAI,EAAE,gBAAR;AAA0BR,QAAAA,EAAE,EAAEA;AAA9B,OAAF,CAAR;AAA+C;AADrE,GAAP;AAGH,CAJD;;AAMJ,eAAeZ,OAAO,CAACgB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4Cf,QAA5C,CAAf","sourcesContent":["import React, { Component }from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { initialMessages } from '../actions/index'\n\n//RETURNS messageList - as Message *** SHOULD MESSAGE name be changed ?\n// the returned list is what gets rendered as a component which contains messages & delete message within it.\n\nclass Messages extends Component {\n    \n\n\n    render() {\n        console.log(this.props);\n        /* const messages = this.props.messages;\n        const messageList = messages.length ? (\n        messages.map(message => {\n                return (\n                    <div className=\"message\" key={ message.id }>\n                        <Link to={'/messages/' + message.id }>\n                        <div>Name:{ message.name } </div>\n                        <div>Message:{ message.message } </div>\n                        </Link>\n                        <button onClick={() => {this.props.deleteMessage(message.id)}}>\n                            Delete Message\n                        </button>\n                    </div>\n                )\n                })\n                ) : ( <div>No messages</div> ) */\n\n        const messagesList = ({messages}) => {\n            return (\n                <div>\n                    { messages && messages.map(message => {\n                        return (\n                            <div className = \"message\" key ={message.id}>\n                                <Link to={'/messages/' + message.id }>\n                                    <div>Name:{ message.name } </div>\n                                    <div>Message:{ message.message } </div>\n                                </Link>\n                                <button onClick={() => {this.props.deleteMessage(message.id)}}>\n                                    Delete Message\n                                </button>\n                            </div>\n                        )\n                    }) }\n                </div>\n            )\n        }\n\n\n        return (\n            <div className=\"messageList\">\n                { messageList }\n            </div>\n        )\n        }\n        }\n        \n\n    const mapStateToProps = (state) => {\n    return {\n        messages: state.message.messages\n    } }\n\n    //Dispatch the deleteMessage action and give it the message.id as payload\n    //mapped function to props\n    const mapDispatchToProps = (dispatch) => {\n        return {\n            deleteMessage: (id) => { dispatch ({ type: 'DELETE_MESSAGE', id: id }) }\n        }\n    }\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Messages)"]},"metadata":{},"sourceType":"module"}